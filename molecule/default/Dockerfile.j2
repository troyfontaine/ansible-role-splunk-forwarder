# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

#FROM oraclelinux:9
#FROM amazonlinux:2023
#FROM ubuntu:22.04

RUN if cat /etc/os-release | grep 'ubuntu'; then export \
    DEBIAN_FRONTEND=noninteractive; apt-get update && apt-get install -y acl python3 sudo bash ca-certificates rsyslog postfix iproute2 systemd systemd-sysv unzip xz-utils && apt-get clean; \
    elif cat /etc/os-release | grep 'amazon-linux-2023'; then dnf makecache && dnf --assumeyes install python39 sudo python3-devel python3-dnf systemd kernel-libbpf bash unzip tar dbus && dnf clean all; \
    elif cat /etc/os-release | grep oracle; then dnf makecache && dnf --assumeyes install python39 sudo python3-devel python3-dnf bash unzip tar dbus && dnf clean all; \
    elif [ $(command -v yum) ]; then yum makecache fast && yum install -y python shadow-utils acl openssh-server systemd systemd-libs initscripts sudo unzip gzip tar yum-plugin-ovl bash iproute && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf && yum clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python sudo bash python-xml && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python sudo bash ca-certificates; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python sudo bash ca-certificates && xbps-remove -O; fi

RUN if [ $(command -v apt-get) ]; then \
    cd /lib/systemd/system/sysinit.target.wants/ ; \
    ls | grep -v systemd-tmpfiles-setup | xargs rm -f $1 ; \
    rm -f /lib/systemd/system/multi-user.target.wants/* ; \
    rm -f /etc/systemd/system/*.wants/* ; \
    rm -f /lib/systemd/system/local-fs.target.wants/* ; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev* ; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl* ; \
    rm -f /lib/systemd/system/basic.target.wants/* ; \
    rm -f /lib/systemd/system/anaconda.target.wants/* ; \
    rm -f /lib/systemd/system/plymouth* ; \
    rm -f /lib/systemd/system/systemd-update-utmp*; \
    elif [ $(command -v dnf) ] || [ $(command -v yum) ]; then \
    (cd /lib/systemd/system/sysinit.target.wants/; \
    for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -rf $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*; fi

VOLUME [ "/sys/fs/cgroup" ]

#CMD ["/usr/sbin/init"]
CMD ["/lib/systemd/systemd"]
